name: build and test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:


jobs:
  all-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      
    runs-on: ${{ matrix.os }}
    steps:
      - name: CheckOut test
        uses: actions/checkout@v4  
          
      - name: cmake-configure
        uses: snickerbockers/cmake-configure@prerel1

      - name: Build sources and tests
        run: |
           if ( "$matrix.os"  == 'ubuntu-latest' ); then
             cmake -S . -B build/release -D CMAKE_BUILD_TYPE=Release
             cmake --build build/release
           else
             cmake -S . -B build/release -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Release
             cmake --build build/release
           fi
          

  test:
    needs: all-build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      
    runs-on: ${{ matrix.os }}
    steps:
    - name: Run tests
      run: |
        if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
          cmake -S . -B build/release -D CMAKE_BUILD_TYPE=Release
          cmake --build build/release
          chmod +x run-tests.sh
          ./run-tests.sh
        else
           cmake -S . -B build/release -G "MinGW Makefiles" -D CMAKE_BUILD_TYPE=Release
           cmake --build build/release
           ./run-tests.sh
        fi


    
    
           
